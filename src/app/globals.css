/* Variables de color y configuración (modo claro) */
:root {
  --color-bg1: #ffffff;
  --color-bg2: #f0f0f0;
  /* Usamos tonos parecidos a azul y fucsia para las 5 pelotas */
  --color1: 18, 113, 255;    /* azul */
  --color2: 221, 74, 255;    /* fucsia */
  --color3: 30, 100, 240;    /* variante de azul */
  --color4: 210, 80, 240;    /* variante de fucsia */
  --color5: 180, 90, 245;    /* mezcla */
  --color-interactive: 140, 100, 255;
  --circle-size: 30%;       /* Tamaño base de las pelotas */
  --blending: hard-light;
}

/* Variables para modo oscuro */
html.dark {
  --color-bg1: #000000;
  --color-bg2: #2b2b2b;
}

/* Fondo degradado con efecto goo */
.gradient-bg {
  width: 100vw;
  height: 100vh;
  position: fixed;
  overflow: hidden;
  background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2));
  top: 0;
  left: 0;
  z-index: -1;
}

.gradient-bg svg {
  position: fixed;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
}

/* El contenedor de pelotas se limita al contenedor principal */
.gradient-bg .gradients-container {
  width: 100%;
  height: 100%;
  position: relative;
  /* Si prefieres el efecto blur, puedes reactivarlo:
  filter: url(#goo) blur(40px); */
}

/* Estilos para cada pelota; sus posiciones iniciales se definirán vía JavaScript */
.gradient-bg .gradients-container .g1,
.gradient-bg .gradients-container .g2,
.gradient-bg .gradients-container .g3,
.gradient-bg .gradients-container .g4,
.gradient-bg .gradients-container .g5 {
  position: absolute;
  width: var(--circle-size);
  height: var(--circle-size);
  mix-blend-mode: var(--blending);
  opacity: 1;
}

.gradient-bg .gradients-container .g1 {
  background: radial-gradient(circle at center, rgba(var(--color1), 0.8) 0, rgba(var(--color1), 0) 50%) no-repeat;
}

.gradient-bg .gradients-container .g2 {
  background: radial-gradient(circle at center, rgba(var(--color2), 0.8) 0, rgba(var(--color2), 0) 50%) no-repeat;
}

.gradient-bg .gradients-container .g3 {
  background: radial-gradient(circle at center, rgba(var(--color3), 0.8) 0, rgba(var(--color3), 0) 50%) no-repeat;
}

.gradient-bg .gradients-container .g4 {
  background: radial-gradient(circle at center, rgba(var(--color4), 0.8) 0, rgba(var(--color4), 0) 50%) no-repeat;
}

.gradient-bg .gradients-container .g5 {
  width: calc(var(--circle-size) * 1.2);
  height: calc(var(--circle-size) * 1.2);
  background: radial-gradient(circle at center, rgba(var(--color5), 0.8) 0, rgba(var(--color5), 0) 50%) no-repeat;
}

/* Capa interactiva adicional (opcional) */
.gradient-bg .gradients-container .interactive {
  background: radial-gradient(circle at center, rgba(var(--color-interactive), 0.8) 0, rgba(var(--color-interactive), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);
  position: absolute;
  top: -50%;
  left: -50%;
  width: 100%;
  height: 100%;
  opacity: 0.7;
}

/* Resto de estilos para layout y home */

.homeMain {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background: transparent;
  color: #000;
  transition: background 0.3s, color 0.3s;
}

html.dark .homeMain {
  background: transparent;
  color: #fff;
}

.heroSection {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4rem;
}

.heroContent {
  display: flex;
  align-items: center;
  max-width: 1200px;
  width: 100%;
  gap: 3rem;
}

.imageWrapper {
  flex: none;
  width: 400px;
  height: 572px;
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 10px rgba(0,0,0,0.4);
}

.divider {
  width: 1px;
  height: 60%;
  background-color: #ccc;
  transition: background-color 0.3s;
}

html.dark .divider {
  background-color: #777;
}

.textWrapper {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  max-width: 600px;
}

.heroName {
  font-size: 3rem;
  margin: 0;
  color: #000;
}

.heroRole {
  font-size: 2rem;
  margin: 0;
  margin-top: 0.5rem;
  color: #555;
}

.heroDesc {
  font-size: 1.2rem;
  line-height: 1.6;
  margin-top: 1rem;
  color: #333;
}

html.dark .heroName,
html.dark .heroRole,
html.dark .heroDesc {
  color: #fff;
}

.fadeIn {
  opacity: 0;
  animation: fadeIn 1s forwards;
}
@keyframes fadeIn {
  to { opacity: 1; }
}
